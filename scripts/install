#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --weight=1

final_path=/opt/yunohost/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --weight=2

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=is_public --value=$is_public

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_script_progression --message="Configuring firewall..." --weight=1

# Find a free port
port=$(ynh_find_port --port=8095)
ynh_app_setting_set --app=$app --key=port --value=$port

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --weight=43

# FIXME Should run "sudo update-alternatives --config java"
# See https://airsonic.github.io/docs/install/prerequisites/
ynh_install_app_dependencies $pkg_dependencies

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --weight=82

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir=$final_path

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring nginx web server..." --weight=1

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --weight=3

# Create a system user
ynh_system_user_create --username=$app

#=================================================
# SPECIFIC SETUP
#=================================================
# CREATE DIRECTORIES
#=================================================

mkdir -p /home/yunohost.airsonic/{Podcasts,Playlists}

#=================================================
# SECURING FILES AND DIRECTORIES
#=================================================

chown -R $app:www-data /home/yunohost.airsonic/
chmod -R 764 /home/yunohost.airsonic

#=================================================
# YUNOHOST MULTIMEDIA INTEGRATION
#=================================================
ynh_script_progression --message="Adding multimedia directories..." --weight=3

ynh_multimedia_build_main_dir
ynh_multimedia_addfolder --source_dir="/home/yunohost.airsonic/Podcasts" --dest_dir="share/Podcasts"
ynh_multimedia_addfolder --source_dir="/home/yunohost.airsonic/Playlists" --dest_dir="share/Playlists"

#=================================================
# ENABLE "TRANSCODE"
#=================================================

### For details, see https://airsonic.github.io/docs/transcode/

mkdir -p $final_path/transcode

if [ -x /usr/bin/ffmpeg ]; then   # Check if 'ffmpeg' is installed and executable
	ln -s /usr/bin/ffmpeg $final_path/transcode
fi

# FIXME Not sure if 'lame' is needed ?
if [ -x /usr/bin/lame ]; then   # Check if 'lame' is installed and executable
	ln -s /usr/bin/lame $final_path/transcode
fi

# Ensure links belong to the $app user
chown $app: $final_path/transcode

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --weight=3

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# MODIFY CONFIG FILES
#=================================================

# Path of the systemd service configuration
service_config="/etc/default/$app"

ynh_app_setting_set --app=$app --key=service_config --value=$service_config

# Copy config. template to right location
cp ../conf/systemd-sysconfig $service_config

ynh_replace_string --match_string="__FINALPATH__" --replace_string=$final_path --target_file="$service_config"
ynh_replace_string --match_string="__PORT__" --replace_string=$port --target_file="$service_config"
ynh_replace_string --match_string="__PATH__" --replace_string=$path_url --target_file="$service_config"

# Copy configuration file of airsonic
cp ../conf/airsonic.properties $final_path/airsonic.properties

#=================================================
# STORE THE CONFIG FILES CHECKSUM
#=================================================

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$final_path/airsonic.properties"
ynh_store_file_checksum --file="$service_config"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chown -R $app: $final_path

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Configuring log rotation..." --weight=1

# Use logrotate to manage application logfile(s)
ynh_use_logrotate $final_path/airsonic.log

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

yunohost service add $app --description "Airsonic daemon" --log "$final_path/airsonic.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=12

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="$final_path/airsonic.log" --line_match="Started Application in"

#=================================================
# SETUP APPLICATION WITH CURL
#=================================================
ynh_script_progression --message="Configuring SSOwat..." --weight=1

# Set the app as temporarily public for curl call
ynh_app_setting_set --app=$app --key=skipped_uris --value="/"
# Reload SSOwat config
yunohost app ssowatconf

# Reload Nginx
ynh_systemd_action --service_name=nginx --action=reload

mailadmin=$(ynh_user_get_info --username=$admin --key=mail)

#http://www.subsonic.org/pages/api.jsp
passwordAdmin="admin"
salt=$(ynh_string_random --length=8)
token=$(echo -n $passwordAdmin$salt | md5sum | awk '{print $1}')

# Installation with curl
ynh_script_progression --message="Finalizing installation..." --weight=6

# This version number can be found here:
# https://airsonic.github.io/docs/api/
# To use the rest API, after the version 1.13.0, you have to use a "salted hash of the password"
# Doc here, part Authentication:
# http://www.subsonic.org/pages/api.jsp

VERSION="1.15.0"

# Change default admin password
new_password=$passwordAdmin
ynh_local_curl "/rest/changePassword.view" "u=admin" "v=$VERSION" "c=myapp" "username=admin" "password=$new_password"

# Create admin user
passwordAdmin=$passwordAdmin
token=$(echo -n $passwordAdmin$salt | md5sum | awk '{print $1}')

ynh_local_curl "/rest/createUser.view" "u=admin" "username=$admin" "password=$passwordAdmin" "v=$VERSION" "c=myapp" "email=$mailadmin" "adminRole=Yes" "ldapAuthenticated=Yes" "settingsRole=Yes" "streamRole=Yes" "jukeboxRole=Yes" "downloadRole=Yes" "uploadRole=Yes" "playlistRole=Yes" "coverArtRole=Yes" "commentRole=Yes" "podcastRole=Yes" "shareRole=Yes" "videoConversionRole=Yes"

# Remove the public access
if [ $is_public -eq 0 ]
then
	ynh_app_setting_delete --app=$app --key=skipped_uris
fi

#=================================================
# USE MULTIMEDIA
#=================================================
ynh_systemd_action --service_name=$app --action="stop"

# Use multimedia folder
ynh_replace_string --match_string="INSERT INTO MUSIC_FOLDER VALUES(0,'/var/music','Music'" --replace_string="INSERT INTO MUSIC_FOLDER VALUES(0,'/home/yunohost.multimedia/share/Music','YunoHost Music'" --target_file="$final_path/db/airsonic.script"

ynh_script_progression --message="Restarting a systemd service..." --weight=12

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="$final_path/airsonic.log" --line_match="Started Application in"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..." --weight=2

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set --app=$app --key=unprotected_uris --value="/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..." --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
